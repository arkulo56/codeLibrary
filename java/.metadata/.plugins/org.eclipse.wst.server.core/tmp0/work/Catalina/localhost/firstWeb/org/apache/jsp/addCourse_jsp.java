/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2016-04-23 03:12:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import java.util.*;
import model.*;
import action.*;

public final class addCourse_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("action");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h1>添加课程</h1>\n");
      out.write("<h4><a href=\"index.jsp\">返回主页</a></h4>\n");
      out.write("<hr>\n");
      out.write("<form action=\"addDeal.jsp\" method=\"post\" name=\"courseForm\">\n");
      out.write("<table>\n");
      out.write("<tr>\n");
      out.write("\t<td>课程名称：</td>\n");
      out.write("\t<td><input type=\"text\" name=\"name\" /></td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td>上课日期：</td>\n");
      out.write("\t<td><input type=\"text\" name=\"classDate\" /></td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td>上课时间：</td>\n");
      out.write("\t<td><input type=\"text\" name=\"startTime\" /></td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td>下课时间：</td>\n");
      out.write("\t<td><input type=\"text\" name=\"endTime\" /></td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td>教师姓名：</td>\n");
      out.write("\t<td><input type=\"text\" name=\"teacher\" /></td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td>总次数：</td>\n");
      out.write("\t<td><input type=\"text\" name=\"classNumber\" /></td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td>价格：</td>\n");
      out.write("\t<td><input type=\"text\" name=\"price\" /></td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td>季节：</td>\n");
      out.write("\t<td><input type=\"text\" name=\"season\" /></td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td>年级：</td>\n");
      out.write("\t<td>\n");
      out.write("\t<select name=\"classLevel\">\n");
      out.write("\t\t<option value=\"1\">小学1年级</option>\n");
      out.write("\t\t<option value=\"2\">小学2年级</option>\n");
      out.write("\t\t<option value=\"3\">小学3年级</option>\n");
      out.write("\t\t<option value=\"4\">小学4年级</option>\n");
      out.write("\t\t<option value=\"5\">小学5年级</option>\n");
      out.write("\t\t<option value=\"6\">小学6年级</option>\n");
      out.write("\t\t<option value=\"7\">初中1年级</option>\n");
      out.write("\t\t<option value=\"8\">初中2年级</option>\n");
      out.write("\t\t<option value=\"9\">初中3年级</option>\n");
      out.write("\t\t<option value=\"10\">高中1年级</option>\n");
      out.write("\t\t<option value=\"11\">高中2年级</option>\n");
      out.write("\t\t<option value=\"12\">高中3年级</option>\n");
      out.write("\t</select>\n");
      out.write("\t</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td>课程类型：</td>\n");
      out.write("\t<td>\n");
      out.write("\t<select name=\"classGategory\">\n");
      out.write("\t\t<option value=\"1\">语文</option>\n");
      out.write("\t\t<option value=\"2\">数学</option>\n");
      out.write("\t\t<option value=\"3\">英语</option>\n");
      out.write("\t\t<option value=\"4\">物理</option>\n");
      out.write("\t\t<option value=\"5\">化学</option>\n");
      out.write("\t\t<option value=\"6\">生物</option>\n");
      out.write("\t\t<option value=\"7\">地理</option>\n");
      out.write("\t</select>\n");
      out.write("\t</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("\t<td colspan=\"2\"><input type=\"submit\" value=\"提交\" /></td>\n");
      out.write("</tr>\n");
      out.write("</table>\n");
      out.write("</form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
